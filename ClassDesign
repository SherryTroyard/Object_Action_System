#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <conio.h>
#include <string>
#include <fstream>
#include <map>
#include <utility>
#include <iomanip>
#include <time.h>
#define N 1000
#define M 100
#define modalao true
//需补充清空界面
//文件操作需完善

using namespace std;

void ini();
void Inter();
void login();
void regis();  //register
void Admin();
void AdminP();
void Admin0();
void Admin1();
void Admin2();
void Admin3();
void Home();
void show();
void entry();
void modif();  //modify
void del();  //delete
void sech();  //search object
void Bsech1();  //二分查找
void sech2();
void sech3();
void sts();  //statistics
void view();
void Aview();
void Asys();  //auction system
void loadACT();  //文件写入
void loadAUC();
void center();
void Pass();

typedef struct auction
{
    string name;
    int sta;  //status
    string dcr;  //description
    double price;
    int Uord;  //username order
    int ordin; //ordinal
    int type;
    int suc; //successful 是否竞拍成功
    string time;
    int whe;  //是否被拍卖
}auc;

typedef struct account
{
    string Uname;  //Username
    string pass;  //password
    string ID;
    //int Sum;
    double money;
}act;

auc AUC[N];
auc temp;
act ACT[M];  // the 0 is useless and the 1 is the admin
int qua = 0; //quantity
int cnt = 0;
int who;
string ad;
map <string, int> m; //查重
map <int, string> s;
time_t nowtime;

int main()
{
    ini();
    Inter();
    return 0;
}

void ini()  //初始化
{
    ACT[0].Uname = "NONE";
    ACT[0].pass = "NONE";
    m["ERROR"] = 0;
    s[0] = "ERROR";
    s[1] = "电子产品";
    s[2] = "生活用品";
    s[3] = "食品";
    s[4] = "工艺品";
    s[5] = "其他";
    ad = "admin";
    nowtime = time(NULL);
}

void loadACT()
{
    ifstream in;
    in.open("Un.txt");
    for(int i = 1; i < M; i++){
        in >> ACT[i].Uname;
        m[ACT[i].Uname] = i;
        ACT[i].ID = i;
        in >> ACT[i].pass;
        in >> ACT[i].money;
        cnt++;
        if(ACT[i].Uname.empty()) break;
    }
    //cout << cnt << endl;
    in.close();
}

void Inter()
{
    loadACT();
    printf("\n");
    printf("         @@@@@@+     .@@@@@  @@@@@.    :@@@@+ #`  @@@@@@@@@@@@   +@@@@@@@@+      :@@@@:    #@@@    @@@@@\n");
    printf("         @@@@@@@     @@@@@@..@@@@@@   @@@@@@@@@@  @@@@@@@@@@@@   @@@@@@@@@@     @@@@@@@@   @@@@@  ;@@@@@@\n");
    printf("            @@@@.     .@@      @@.   @@@`   #@@@  @@   @@   @@       @@        @@@`  `@@@    @@@;    @@\n");
    printf("           @@@@@@     .@@      @@.  +@@      #@@  @@   @@   @@       @@       #@@      @@@   @@@@    @@\n");
    printf("           @@:`@@     .@@      @@.  @@:      `@@  @@   @@   @@       @@       @@`      `@@   @@@@@   @@\n");
    printf("          '@@  @@#    .@@      @@.  @@            @@   @@   @@       @@      .@@        @@.  @@`@@:  @@\n");
    printf("          @@#  '@@    .@@      @@.  @@                 @@            @@      ;@@        @@'  @@ #@@  @@\n");
    printf("         `@@    @@:   .@@      @@.  @@                 @@            @@      ;@@        @@'  @@  @@@ @@\n");
    printf("         @@@@@@@@@@   .@@      @@.  @@                 @@            @@      .@@        @@.  @@  .@@.@@\n");
    printf("         @@@@@@@@@@    @@      @@   @@`                @@            @@       @@`      `@@   @@   @@@@@\n");
    printf("        '@@      @@#   @@      @@   #@@       @@       @@            @@       #@@      @@@   @@    @@@@\n");
    printf("        @@+      ;@@   #@@`  `@@#    @@@`    @@@       @@            @@        @@@`  `@@@    @@    ,@@@\n");
    printf("      @@@@@@@  +@@@@@@  @@@@@@@@      @@@@@@@@@.    @@@@@@@@.    @@@@@@@@@@     @@@@@@@@   @@@@@@+  @@@\n");
    printf("       @@@@@`   @@@@@`   .@@@@.        .@@@@@'      #@@@@@@@     +@@@@@@@@+      :@@@@:    `@@@@@    @@\n");
    printf("\n");
    printf("                                            ------------------------\n");
    printf("                                            欢迎使用物品竞拍管理系统\n");
    printf("                                            ------------------------\n");
    printf("                                                     请选择：\n");
    printf("                                                   1.用户登录\n");
    printf("                                                   2.用户注册\n");
    printf("                                                  3.管理员模式\n");
    printf("                                                   4.退出系统\n");
    printf("                                            ------------------------\n");
    cout << "                                                                          " << ctime(&nowtime) << endl;
    int n;
    scanf("%d", &n);
    switch(n)
    {
        case 1: system("cls"); login(); break;
        case 2: system("cls"); regis(); break;
        case 3: system("cls"); Admin(); break;
        case 4: return;
    }
}

void login()
{
    string u, p;
    char p1;
    map <string,int>::iterator ite;
    cout << "用户名：" << endl;
    cin >> u;
    ite = m.find(u);
    if(ite != m.end()){
        who = m[u];
        cout << "密码：" << endl;
        while((p1 = getch()) != '\r'){
            p += p1;
            cout << '*';
        }
        if(p == ACT[who].pass){
            system("cls");
            Home();
        }
        else{
            cout << endl << "密码不正确，请重新登录。" << endl;  //请按回车键返回首页后重新登录
            /*
            while(1){
                while((p1 = getch()) != '\r') {
                    p += p1;
                    cout << '*';
                }
                if(p == ACT[who].pass) {
                    system("cls");
                    Home();
                }
            }*/
            getch();
            system("cls");
            //Inter();
            login();
        }
        /*while(1) {
            if(p != ACT[who].pass) {
                p = "";
                cout << endl << "密码不正确，请按回车键返回首页后重新登录。" << endl;
                while((p1 = getch()) != '\r') {
                    p += p1;
                    cout << '*';
                }
            } else
                break;
        }
        getch();
        system("cls");
        return Inter();*/
    }
    else{
        cout << "用户名不存在，请按Enter键返回首页后重新登录。" << endl; //分重新登陆与返回注册
        getch();
        system("cls");
        Inter();
    }
}

void regis()
//后续完善：注册密码第一位应为字母，且密码不得超过多少位，因为管理员很懒
{
    map <string, int>::iterator ite;
    ofstream out;
    string u, p;
    cout << "创建账户（请输入用户名，不超过6个字符）：" << endl;
    cin >> u;
    out.open("Un.txt", ios::app);
    if(!m.count(u)) {
        m.insert(pair<string, int>(u, cnt));
        cnt++;
        out << u;
        cout << "创建密码（6-15个字符）: " << endl;
        cin >> p;
        out << " " << p << " 0" << endl;
        loadACT();
        system("cls");
        Inter();
    }
    else{
        cout << "此账户已存在，请尝试使用其他用户名。" << endl << endl;
        regis();
    }
    out.close();
}

void Pass()
{
    string p1, p2, p3;
    ofstream out;
    cout << "请输入旧密码:";
    cin >> p1;
    cout << endl;
    if(p1 == ACT[who].pass){
        cout << "请输入新密码：";
        cin >> p2;
        cout << endl;
        cout << "确认新密码：";
        cin >> p3;
        cout << endl;
        if(p3 == p2){
            cout << "密码修改成功！" << endl;
            ACT[who].pass = p2;
            out.open("Un.txt", ios::trunc);
            out.close();
            out.open("Un.txt", ios::app);
            for(int i = 1; i < M; i++){
                if(ACT[i].Uname.empty()) break;
                out << ACT[i].Uname << " " << ACT[i].pass << " " << ACT[i].money << endl;
            }
            out.close();
            loadACT();
            getch();
            system("cls");
            Home();
        }
        else{
            cout << "两次密码不一致，请按Enter键返回上级菜单。" << endl;
            getch();
            system("cls");
            Home();
        }
    }
    else{
        cout << "密码错误，请按Enter键返回上级菜单。" << endl;
        getch();
        system("cls");
        Home();
    }
}

void Admin()
{
    string s;
    cout << "请输入密码验证身份：" << endl;  //要改进，不然次次退出都要输密码
    cin >> s;
    if(s != ad){
        cout << "密码错误，请按Enter键返回主界面。" << endl;
        getch();
        system("cls");
        Inter();
    }
    else{
        system("cls");
        Admin0();
    }
}

void Admin0()
{
    cout << "已取得管理员权限。" << endl;
        AdminP();
        int n;
        cin >> n;
        switch(n)
        {
            case 1: system("cls"); Admin1(); break;
            case 2: system("cls"); Admin2(); break;
            case 3: system("cls"); Admin3(); break;
            case 4: system("cls"); view(); break;
            case 5: system("cls"); Inter(); break;
        }
}

void AdminP()
{
    printf("\n");
    printf("                                            ------------------------\n");
    printf("                                                   管理员模式\n");
    printf("                                            ------------------------\n");
    printf("                                                     请选择：\n");
    printf("                                                1.用户名搜索用户\n");
    printf("                                                 2.编号搜索用户\n");
    printf("                                                 3.查看用户列表\n");
    printf("                                                 4.查看物品列表\n");
    printf("                                                  5.管理员登出\n");
    printf("                                            ------------------------\n");
}

void Admin1()
{
    string n;
    cout << "请输入待查找的用户名:" << endl;
    cin >> n;
    int f = 0;
    double m;
    char c;
    for(int i = 1; i < M; i++){
        if(n == ACT[i].Uname){
            f = 1;
            cout << "搜索到该用户，信息如下：" << endl
                 << "用户编号：" << setw(4) << setfill('0') << i << endl
                 << "用户名：" << ACT[i].Uname << endl
                 << "用户余额：" << ACT[i].money << endl
                 << "（按P+Enter充值，按B+Enter返回上级菜单）" << endl;
            cin >> c;
            if(c == 'P'){
                cout << "请输入充值金额（整数）：" << endl;
                cin >> m;
                ACT[i].money = m;
                ofstream out;
                out.open("Un.txt", ios::trunc);
                out.close();
                out.open("Un.txt", ios::app);
                for(int i = 1; i < M; i++) {
                    if(ACT[i].Uname.empty())
                        break;
                    else
                        out << ACT[i].Uname << " " << ACT[i].pass << " " << ACT[i].money << endl;
                }
                out.close();
                loadACT();
                cout << "充值完成，请按Enter键返回上级菜单。" << endl;
                getch();
                system("cls");
                Admin0();
            }
            if(c == 'B'){
                getch();
                system("cls");
                Admin0();
            }
        }
    }
    if(!f){
        cout << "用户不存在！请按Enter键返回上级菜单。" << endl;
        getch();
        system("cls");
        Admin0();
    }
}

void Admin2()
{
    int n, m;
    cout << "请输入待查找的用户编号:" << endl;
    cin >> n;
    char c;
    if(ACT[n].Uname.empty()){
        cout << "用户不存在！请按Enter键返回上级菜单。" << endl;
        getch();
        system("cls");
        Admin0();
    }
    else{
        cout << "搜索到该用户，信息如下：" << endl
             << "用户编号：" << setw(4) << setfill('0') << n << endl
             << "用户名：" << ACT[n].Uname << endl
             << "用户余额：" << ACT[n].money << endl
             << "（按P+Enter充值，按B+Enter返回上级菜单）" << endl;
        cin >> c;
        if(c == 'P') {
            cout << "请输入充值金额（整数）：" << endl;
            cin >> m;
            ACT[n].money = m;
            ofstream out;
            out.open("Un.txt", ios::trunc);
            out.close();
            out.open("Un.txt", ios::app);
            for(int i = 1; i < M; i++) {
                if(ACT[i].Uname.empty())
                    break;
                else
                    out << ACT[i].Uname << " " << ACT[i].pass << " " << ACT[i].money << endl;
            }
            out.close();
            loadACT();
            cout << "充值完成，请按Enter键返回上级菜单。" << endl;
            getch();
            system("cls");
            Admin0();
        }
        if(c == 'B') {
            system("cls");
            Admin0();
        }
    }
}

void Admin3()
{
    loadACT();
    cout << "用户编号" << "    " << "用户名" << "    " << "用户密码" << "        " << "用户余额" << endl;
    for(int i = 1; i < M; i++){
        if(ACT[i].Uname.empty()) break;
        cout << setw(4) << setfill('0') << i << "\t    "
             << ACT[i].Uname << "\t      " << ACT[i].pass << "\t      " << ACT[i].money << endl;
    }
    cout << endl << "请按Enter键返回。" << endl;
    getch();
    system("cls");
    Admin0();
}

void loadAUC()
{
    ifstream in;
    in.open("Obj.txt");
    for(int i = 0; i < N; i++){
        in >> AUC[i].name;
        in >> AUC[i].Uord;
        in >> AUC[i].sta;
        in >> AUC[i].type;
        in >> AUC[i].dcr;
        in >> AUC[i].price;
        in >> AUC[i].ordin;
        qua = max(qua, AUC[i].ordin);
        if(AUC[i].name.empty()) break;
    }
    in.close();
}

void Home()
{
    loadAUC();
    cout << ACT[who].Uname << "，欢迎回来！您的余额为：" << ACT[who].money << endl;
    printf("\n");
    printf("      @@@@@@` #@@@@@'@@@@@@@@@@@@  @@@@@@@@         #@@@@@#@@     #@@@@@:   @@@@;     @@@@#@@@@@@@@@@@@\n");
    printf("      @@@@@@` #@@@@@'@@@@@@@@@@@@  @@@@@@@@        @@@@@@@@@@    @@@@@@@@#  @@@@@     @@@@#@@@@@@@@@@@@\n");
    printf("       @@#       @@.   @@     @@@     @@          @@@     @@@   @@@    .@@+  @@@@:   #@@@.   @@     @@@\n");
    printf("       +@@  @@+  @@    @@     @@@     @@         .@@       @@  ;@@      .@@  @@@@@   @@@@.   @@     @@@\n");
    printf("       ;@@  @@@  @@    @@  @@ :@:     @@         @@#       @@  @@'       @@+ @@@@@` +@@@@.   @@  @@ :@:\n");
    printf("       `@@ #@@@  @@    @@  @@         @@         @@.           @@        '@@ @@@@@@ @@'@@.   @@  @@\n");
    printf("        @@ @@@@#`@@    @@@@@@         @@         @@.           @@        .@@ @@@ @@;@@ @@.   @@@@@@\n");
    printf("        @@ @@:@@;@@    @@@@@@         @@      @  @@.           @@        ;@@ @@@ @@@@+ @@.   @@@@@@ \n");
    printf("        @@#@@ @@#@@    @@  @@  ##     @@     +@@ @@:           @@,       @@@ @@@ `@@@  @@.   @@  @@  ##\n");
    printf("        @@@@: @@@@#    @@      @@     @@     +@@ #@@           #@@       @@` @@@  @@#  @@.   @@      @@\n");
    printf("        @@@@  ,@@@;    @@      @@     @@     +@@  @@+      @@:  @@#     @@@  @@@       @@.   @@      @@\n");
    printf("        @@@@   @@@.  @@@@@@@@@@@@  :@@@@@@@@@@@@  ,@@@;  ;@@@`  .@@@, ;@@@  +@@@@+   @@@@@,@@@@@@@@@@@@\n");
    printf("        '@@;   @@@   @@@@@@@@@@@@  @@@@@@@@@@@@@   `@@@@@@@@`    `@@@@@@@   @@@@@@   @@@@@@@@@@@@@@@@@@\n");
    printf("                                                     '@@'         `+@'\n");
    printf("\n");
    printf("                                            ------------------------\n");
    printf("                                                    功能菜单\n");
    printf("                                            ------------------------\n");
    printf("                                                     请选择：\n");
    printf("                                               1.竞拍物品管理中心\n"); //原查看竞拍物品信息
    printf("                                                 2.物品竞拍中心\n");
    printf("                                                   3.修改密码\n");
    printf("                                                   4.用户登出\n");
    printf("                                            ------------------------\n");
    int n;
    scanf("%d", &n);
    switch(n)
    {
        case 1: system("cls"); center(); break;
        case 2: system("cls"); sech(); break;
        case 3: system("cls"); Pass(); break;
        case 4: system("cls"); Inter(); break;
    }
}

void center()
{
    cout << ACT[who].Uname << "，欢迎回来！您的余额为：" << ACT[who].money << endl;
    printf("\n");
    printf("                                            ------------------------\n");
    printf("                                                竞拍物品管理中心\n");
    printf("                                            ------------------------\n");
    printf("                                                     请选择：\n");
    printf("                                               1.我的竞拍物品信息\n");
    printf("                                               2.录入竞拍物品信息\n");
    printf("                                               3.修改竞拍物品信息\n");
    printf("                                               4.删除竞拍物品信息\n");
    //printf("                                               5.查找竞拍物品信息\n");//
    printf("                                               5.统计竞拍物品信息\n");
    //printf("                                                  6.修改密码\n");
    printf("                                                 6.返回功能菜单\n");
    printf("                                            ------------------------\n");
    int n;
    scanf("%d", &n);
    switch(n)
    {
        case 1: system("cls"); show(); break;
        case 2: system("cls"); entry(); break;
        case 3: system("cls"); modif(); break;
        case 4: system("cls"); del(); break;
        //case 5: system("cls"); sech(); break;
        case 5: system("cls"); sts(); break;
        //case 7: system("cls"); view(); break;
        //case 6: system("cls"); Pass(); break;
        case 6: system("cls"); Home(); break;
    }
}

void show()
{
    loadAUC();
    int f = 0;
    cout << endl;
    //cout << "\t物品编号\t物品名称\t新旧程度\t物品类型\t物品描述\t物品估价" << endl;
    for(int i = 0; i < N; i++){
        if(AUC[i].Uord == who){
            cout << "\t\t\t\t\t\t物品编号：" << AUC[i].ordin << endl
                 << "\t\t\t\t\t\t物品名称：" << AUC[i].name << endl
                 << "\t\t\t\t\t\t新旧程度：" << AUC[i].sta << endl
                 << "\t\t\t\t\t\t物品类型：" << s[AUC[i].type] << endl
                 << "\t\t\t\t\t\t物品描述：" << AUC[i].dcr << endl
                 << "\t\t\t\t\t\t物品估价：￥" << AUC[i].price << endl
                 << endl;
            f = 1;
        }
    }
    if(!f)
        cout << "\t\t\t\t\t      没有竞拍物品信息。" << endl;
    cout << endl << "请按Enter键返回。" << endl;
    getch();
    system("cls");
    center();
}

void entry()
{
    ofstream fp;
    fp.open("Obj.txt", ios::app);
    string n, d;
    int st, ty;
    char cho;
    double pr, mn;
    if(ACT[who].money == 0){
        cout << "余额不足，请联系管理员充值后再来（按Enter键返回上级菜单）。" << endl;
            getch();
            system("cls");
            center();
    }
    else{
        cout << "物品名称：" << endl;
        cin >> n;
        cout << "物品的新旧程度(0-100)：" << endl;
        cin >> st;
        cout << "物品类型：Ⅰ.电子产品；Ⅱ.生活用品；Ⅲ.食品；Ⅳ.工艺品；Ⅴ.其他" << endl;
        cin >> ty;
        cout << "物品描述：" << endl;
        cin >> d;
        cout << "对物品的估价（将作为起始竞拍价/￥）：" << endl;
        cin >> pr;
        mn = 0.2*pr;
        cout << "你需要支付" << mn << "元（起始竞拍价的20%）作为佣金" << endl
             << "确认请按Y+Enter，返回菜单请按B+Enter" << endl;  //重新输入估价请按A+Enter，
        cin >> cho;
        if(cho == 'Y') {
            if(ACT[who].money >= mn) {
                ++qua;
                fp << n << " " << who << " " << st << " " << ty << " " << d << " " << pr << " " << qua << endl;
                fp.close();
                ACT[who].money -= mn;
                ofstream out;
                out.open("Un.txt", ios::trunc);
                out.close();
                out.open("Un.txt", ios::app);
                for(int i = 1; i < M; i++) {
                    if(ACT[i].Uname.empty())
                        break;
                    else
                        out << ACT[i].Uname << " " << ACT[i].pass << " " << ACT[i].money << endl;
                }
                out.close();
                loadACT();
                cout << "已确认，请按Enter键返回上级菜单。" << endl;
                getch();
                system("cls");
                center();
            } else {
                cout << "余额不足，请联系管理员充值后再来（按Enter键返回上级菜单）。" << endl;
                getch();
                system("cls");
                center();
            }
        }
        if(cho == 'B') {
            getch();
            system("cls");
            center();
        }
    }
}

void modif()
{
    int o;
    string n_, d_;
    int s_, p_, ty_;
    cout << "请输入你需要修改的物品编号：" << endl;
    cin >> o;
    int f = 0;
    for(int i = 0; i < N; i++){
        if(AUC[i].ordin == o && AUC[i].Uord == who){
            cout << "请修改：" << "Ⅰ.物品名称" << endl;
            cin >> n_;
            AUC[i].name = n_;
            cout << "\tⅡ.物品的新旧程度(0-100):" << endl;
            cin >> s_;
            AUC[i].sta = s_;
            cout << "\tⅢ.物品类型：Ⅰ.电子产品；Ⅱ.生活用品；Ⅲ.食品；Ⅳ.工艺品；Ⅴ.其他" << endl;
            cin >> ty_;
            AUC[i].type = ty_;
            cout << "\tⅢ.物品描述：" << endl;
            cin >> d_;
            AUC[i].dcr = d_;
            cout << "\tⅣ.物品估价（将作为起始竞拍价/￥）：" << endl;
            cin >> p_;
            AUC[i].price = p_;
            f = 1;
            break;
        }
    }
    if(!f){
        cout << "物品不存在" << endl << endl;
    }
    ofstream out;
    out.open("Obj.txt", ios::trunc);
    out.close();
    out.open("Obj.txt", ios::app);
    for(int i = 0; i < N; i++){
        if(AUC[i].name.empty()) break;
        else
            out << AUC[i].name << " " << AUC[i].Uord << " " << AUC[i].sta << " " << AUC[i].type
            << " " << AUC[i].dcr << " " << AUC[i].price <<  " " << AUC[i].ordin << endl;
    }
    out.close();
    cout << "请按Enter键返回上级菜单。" << endl;
    loadAUC();
    getch();
    system("cls");
    center();
}

void del()
{
    int o;
    cout << "请输入你需要删除的物品编号：" << endl;
    cin >> o;
    int f = 1;
    for(int i = 0; i < N; i++){
        if(AUC[i].ordin == o && AUC[i].Uord == who){
            for(int j = i; j < N - 1; j++){
                AUC[j].name = AUC[j + 1].name;
                AUC[j].sta = AUC[j + 1].sta;  //status
                AUC[j].type = AUC[j + 1].type;       //delete后s[type]显示不出来
                AUC[j].dcr = AUC[j + 1].dcr;  //description
                AUC[j].price = AUC[j + 1].price;
                AUC[j].Uord = AUC[j + 1].Uord;  //username order
                AUC[j].ordin = AUC[j + 1].ordin; //ordinal
                //int sum;
                //int suc;
            }
            f = 0;
        }
    }
    if(f){
        cout << "物品不存在" << endl << endl;
    }
    ofstream out;
    out.open("Obj.txt", ios::trunc);
    out.close();
    out.open("Obj.txt", ios::app);
    for(int i = 0; i < N; i++){
        if(AUC[i].name.empty()) break;
        else
            out << AUC[i].name << " " << AUC[i].Uord << " " << AUC[i].sta << " " << AUC[i].type
            << " " << AUC[i].dcr << " " << AUC[i].price <<  " " << AUC[i].ordin << endl;
    }
    out.close();
    cout << "请按Enter键返回上级菜单。" << endl;
    loadAUC();
    getch();
    system("cls");
    center();
}

void sech() //实际竞拍页面
{
    int n;
    printf("                                            ------------------------\n");
    printf("                                                  物品竞拍中心\n");
    printf("                                            ------------------------\n");
    printf("                                                     请选择：\n");
    printf("                                                1.按物品编号查找\n");
    printf("                                                2.按物品名称查找\n");
    printf("                                                3.按物品类型查找\n");
    printf("                                              4.查看所有可竞拍物品\n");
    printf("                                                 5.返回功能菜单\n");
    printf("                                            ------------------------\n");
    cin >> n;
    switch(n)
    {
        case 1: Bsech1(); break;
        case 2: sech2(); break;
        case 3: sech3(); break;
        case 4: Aview(); break;
        case 5: Home(); break;
    }
}

void Bsech1()
{
    loadAUC();
    int n, f = 0;
    char jud;
    cout << "请输入查找的物品编号:" << endl;
    cin >> n;
    int a = -1;
    int l = 0, h = qua, mid;
    //cout << "%" << qua << endl;
    while(l <= h){
        mid = (l + h)/2;
        //cout << "$" << mid << endl;
        if(AUC[mid].ordin == n){
            a = mid; break;
        }
        else if(n < AUC[mid].ordin) h = mid - 1;
        else l = mid + 1;
    }
    //cout << a << endl;
    if(a == -1){
        cout << "物品不存在" << endl << endl;
    }
    else if(AUC[a].name.empty()){
        cout << "物品不存在" << endl << endl;
    }
    else{
        cout << "\t\t\t\t\t\t物品编号：" << AUC[a].ordin << endl
             << "\t\t\t\t\t\t物品名称：" << AUC[a].name << endl
             << "\t\t\t\t\t\t新旧程度：" << AUC[a].sta << endl
             << "\t\t\t\t\t\t物品类型：" << s[AUC[a].type] << endl
             << "\t\t\t\t\t\t物品描述：" << AUC[a].dcr << endl
             << "\t\t\t\t\t\t物品估价：￥" << AUC[a].price << endl
             << endl;
    }
    cout << endl << "按Enter返回上级菜单。" << endl;
    getch();
    system("cls");
    sech();
    /*
    cout << endl << "按C+Enter继续搜索，按B+Enter返回上级菜单。" << endl;
    cin >> jud;
    if(jud == 'C'){
        system("cls");
        sech();
    }
    if(jud == 'B'){
        system("cls");
        center();
    }*/
}

void sech2()
{
    loadAUC();
    string n;
    char jud;
    int f = 0;
    cout << "请输入查找的物品名称:" << endl;
    cin >> n;
    for(int i = 0; i < N; i++){
        if(n == AUC[i].name){
            cout << "\t\t\t\t\t\t物品编号：" << AUC[i].ordin << endl
                 << "\t\t\t\t\t\t物品名称：" << AUC[i].name << endl
                 << "\t\t\t\t\t\t新旧程度：" << AUC[i].sta << endl
                 << "\t\t\t\t\t\t物品类型：" << s[AUC[i].type] << endl
                 << "\t\t\t\t\t\t物品描述：" << AUC[i].dcr << endl
                 << "\t\t\t\t\t\t物品估价：￥" << AUC[i].price << endl
                 << endl;
            f = 1;
        }
    }
    if(!f){
        cout << "物品不存在" << endl << endl;
    }
    //
    cout << endl << "按Enter返回上级菜单。" << endl;
    getch();
    system("cls");
    sech();
    /*
    cout << endl << "按C+Enter继续搜索，按B+Enter返回上级菜单。" << endl;
    cin >> jud;
    if(jud == 'C'){
        system("cls");
        sech();
    }
    if(jud == 'B'){
        system("cls");
        center();
    }*/
}

void sech3()
{
    loadAUC();
    int n, f = 0;
    char jud;
    cout << "请输入查找的物品类型：Ⅰ.电子产品；Ⅱ.生活用品；Ⅲ.食品；Ⅳ.工艺品；Ⅴ.其他" << endl;
    cin >> n;
    for(int i = 0; i < N; i++){
        if(n == AUC[i].type){
            cout << "\t\t\t\t\t\t物品编号：" << AUC[i].ordin << endl
                 << "\t\t\t\t\t\t物品名称：" << AUC[i].name << endl
                 << "\t\t\t\t\t\t新旧程度：" << AUC[i].sta << endl
                 << "\t\t\t\t\t\t物品类型：" << s[AUC[i].type] << endl
                 << "\t\t\t\t\t\t物品描述：" << AUC[i].dcr << endl
                 << "\t\t\t\t\t\t物品估价：￥" << AUC[i].price << endl
                 << endl;
            f = 1;
        }
    }
    if(!f){
        cout << "物品不存在" << endl << endl;
    }
    //
    cout << endl << "按Enter返回上级菜单。" << endl;
    getch();
    system("cls");
    sech();
    /*
    cout << endl << "按C+Enter继续搜索，按B+Enter返回上级菜单。" << endl;
    cin >> jud;
    if(jud == 'C'){
        system("cls");
        sech();
    }
    if(jud == 'B'){
        system("cls");
        center();
    }*/
}

void sts()
{
    printf("unfinish\n");
    center();
}

void view()
{
    loadAUC();
    for(int i = 0; i < N; i++){
        if(AUC[i].name.empty()) break;
        cout << "\t\t\t\t\t\t用户编号：" << setw(4) << setfill('0') << AUC[i].Uord << endl
             << "\t\t\t\t\t\t物品编号：" << AUC[i].ordin << endl
             << "\t\t\t\t\t\t物品名称：" << AUC[i].name << endl
             << "\t\t\t\t\t\t新旧程度：" << AUC[i].sta << endl
             << "\t\t\t\t\t\t物品类型：" << s[AUC[i].type] << endl
             << "\t\t\t\t\t\t物品描述：" << AUC[i].dcr << endl
             << "\t\t\t\t\t\t物品估价：￥" << AUC[i].price << endl
             << endl;
    }
    cout << endl << "请按Enter键返回。" << endl;
    getch();
    system("cls");
    center();
}

void Aview()
{
    loadAUC();
    for(int i = 0; i < N; i++){
        if(AUC[i].name.empty()) break;
        if(AUC[i].Uord == who) continue;
        cout << "\t\t\t\t\t\t用户编号：" << setw(4) << setfill('0') << AUC[i].Uord << endl
             << "\t\t\t\t\t\t物品编号：" << AUC[i].ordin << endl
             << "\t\t\t\t\t\t物品名称：" << AUC[i].name << endl
             << "\t\t\t\t\t\t新旧程度：" << AUC[i].sta << endl
             << "\t\t\t\t\t\t物品类型：" << s[AUC[i].type] << endl
             << "\t\t\t\t\t\t物品描述：" << AUC[i].dcr << endl
             << "\t\t\t\t\t\t物品估价：￥" << AUC[i].price << endl
             << endl;
    }
    cout << endl << "请按Enter键返回。" << endl;
    getch();
    system("cls");
    sech();
}

void Asys()
{
    printf("unfinish\n");
}
